OOP:
its an appoarh tat provides a way of modularizing programming that 
which can be used to create small partition mem area for both data and objects
,whiich are to be used as template for creaating copies of such modules on demand.

object : is a real world entity 
3 charates : state ,behaviour,Identity

oops features:
Encapsulation:
wrapping up of data nd function into single unit know as encapsulation

Abstraction:
hiding the irrelevant details of an obj that do not contribute to its 
essential charatertics as abstraction

Inheritance:
Deriving a new entity from already exisiting know as inheritance ,through
inheritance we can reduce the size of the program.

polymorphism:
The ability to take more than one form 

class:
A class is a template or blueprint,that which contain combination od data member 
and mem func.mem's can be accessable by using instance of the class

class class_name
{
....
....
}

Why java:
platform independence
console apps
windows/web/service oriented/mobiles oriented
package

java features:
	simple
	obj oreinted
	compiled and interpreted
	portable
	secureble: compiler level security and bytecode level security and classloader level security
	distrubed

java architecture
java program
 java codes is that which is stored woith extension .jaa
java class
java pgm after compalition its converted into bytecode, then .class file will be created
 jvm
  1.class loader: used to load all the class which are redueried to run the pgm.
     
a.primordial class loader: used to load all system classes that is required to run the pgm

b.class loader object:used to load all custom classes that which is required to run the program

ii)JIT complier:
just in time

iii)Execution manager:


It provides runtime env that which allows you to run the java pgm.



Access modifiers:
1. Private: allows you to acess within current class

2.public : allow you to access mems in all classes of current app

3.protected : allow you to access mems within the current class,derived clas and other class and other package classes

4.friendly: by default java possess friendly access modifier, allows you to access mems in all classes of current package.


Datatypes:
2 types
1)value types: int,float,double,char,boolean etc

2) reference types: string, objects etc

***value types will be stored in stack memory
ref type will be store in heap mem


system.out.println() : used to display any value or msg.

system - class
out - console
println - method

you can define the main method in java as

public static void main(string[] args)
{
.....
}


main() must be static as no class object supposed to class to call the method main()

int x;
x='$';
x=12;
x=12.5;


boxing and unboxing:
***
The concept of converting values types to references types known as boxing, and ref type to value type known as 
unboxing

obj is the type that which can be used for boxing and unboxing

object x;
x='$';
x=12;
x=12.5;


what is difference between == and equals()????????


get.class():

toString():


ARRAY

for each
Enumerator
hasNext()
next()



Arrays :  

  An array is the finite ordered set of homogeneous elements, means all the elements belongs to same data type. 

you can declare an array as 

int[] a=new int[]{12,5,6,23,15};


Method Overloading : The concept of using the same methodname with different data types or different no.of parameters known as method overloading. Here, the method name must be same, but no.of parameters and type of parameters we are passing here are different. 

class Demo {
  int a,b;
  a=5;
  b=7;
}

A constructor is a special member, that which is used to initilize the member variables of the class, it is special because it has the same name as that of class name. 

Rules : 
________

  1) It will not contains any return type. 

  2) It will not return any value. 

  3) It will be invoked automatically once the instance of the class created. 

  4) A constructor can be overloaded. 

Types of Constructors : 
________________________

   There are 2 types of constructors known as 

  (i) static constructor : These are the constructors that which are invoked automatically before the control reaches the entry point. These constructors are used to initilize the static variables of the class, these constructors cannot be overloaded. 

 (ii) instance constructor : These are the constructors that which are invoked automatically once the instance the class created. These constructors can be overloaded. 

You can define static constructor using static block

static {
....
....
}

static methods : These are the methods that which are to be called by using class name, no object required to call these methods. 

Inheritance : Deriving a new class from already existing class known as inheritance, the class which is derived known as derived class, the class from which it is derived known as base class, through inheritance we can reduce the size of the program. 

class First {
...
...
...
}

class Second extends First {
...
...
...
}

once you create an object to Second class, then you can access all public/protected and friendly members of First class. 



1) Display class as Agent with members 
	agentId int,
	name String,
        city 

and store 3 objects of each {use constructors}

override hashCode(),

equals()

toString() methods


2) Write your own program to implement static variables

3) change the inheritance programs to final and see the output

4) Write your own program on super constructor 

5) Create 5 objects of Agent class and display them by using generalized for loop.






























































	java api